@model IEnumerable<ZeiterfassungPierburg.Models.ViewModel.MitarbeiterInschichtViewModel.MitarbeiterInschichtViewModel>

<section class="content container-fluid">
    <div class="box-header with-border">
        <div class="box box-info">
            <div class="box-header with-border">
                <h3>Übersicht der Mitarbeiter in Schichten</h3>

                <div class="col-lg-12" style="padding-bottom: 25px; padding-top: 5px">
                    <div class="col-md-2">
                        <label>Einträge von:</label>
                        <input class="form-control text-box single-line" id="min" name="Datum" type="date">
                    </div>
                    <div class="mt-2 col-md-2">
                        <label>Einträge bis:</label>

                        <input class="form-control text-box single-line" id="max" name="Datum" type="date">
                    </div>
                    <div class="mt-2 col-md-2">
                        <label>Wähle die Schicht aus:</label>

                        <select class="form-control text-box single-line" id="schicht">
                            <option value="">alle Schichten</option>
                            <option value="1">Früh</option>
                            <option value="2">Spät</option>
                            <option value="3">Nacht</option>
                        </select>
                    </div>
                </div>

                <table id="myTable" class="table table-striped table-bordered" style="width:100%">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Datum)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Art)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Anlage)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Name)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Personalnummer)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Kostenstelle)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.SAPAPNr)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ZeichenNr)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Stück)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.DirStunden)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.InDirStunden)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Bemerkung)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Auswertung)
                            </th>

                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Datum)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Art)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Anlage)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>

                                <td>
                                    @Html.DisplayFor(modelItem => item.Personalnummer)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Kostenstelle)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.SAPAPNr)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ZeichenNr)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Stück)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DirStunden)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.InDirStunden)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Bemerkung)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Auswertung)%
                                </td>
                                <td>
                                    @Html.ActionLink("Bearbeiten", "Edit", new { id = item.ID }) |
                                    @Html.ActionLink("Löschen", "Delete", new { id = item.ID }, new { onclick = "return confirm('Wirklich löschen?');" })
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                @ViewBag.Message


                @Html.ActionLink("Neue Zeiterfassung", "Create", "Neuezeiterfassung", null, new { @class = "pull-right btn btn-default", @type = "button", });
            </div>
        </div>
    </div>
</section>
<iframe id="txtArea1" style="display: none"></iframe>

@section scripts{
    @Styles.Render("~/bundles/tableStyleBundle")
    @Scripts.Render("~/bundles/tableScriptBundle")
    @Scripts.Render("~/bundles/dataTablesPlugins")
    <!--
    <script src="https://code.jquery.com/jquery-3.3.1.js"></script>
    <script src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.6.1/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.6.1/js/buttons.flash.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>-
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>-
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>-
    <script src="https://cdn.datatables.net/buttons/1.6.1/js/buttons.html5.min.js"></script>-
    <script src="https://cdn.datatables.net/buttons/1.6.1/js/buttons.print.min.js"></script>-
    -->

    <script>
        function addDays(date, days) {
            var result = new Date(date);
            result.setDate(result.getDate() + days);
            return result;
        }
        var today = new Date();

        jQuery.fn.dataTableExt.afnFiltering.push(
            function (oSettings, aData, iDataIndex) {
                var iColumn = 0;
                var schichtColumn = 1;


                // document.getElementById('min').value = today; //z.B. 'Thu Jan 16 2020 17:31:26 GMT+0100 (W. Europe Standard Time)'
                //document.getElementById('max').value = today;


                var iMin = Date.parse(document.getElementById('min').value);
                var iMax = Date.parse(document.getElementById('max').value);


                var iVersion = (aData[iColumn] == "-" ? 0 : aData[iColumn]);
                iVersion = Date.parse(iVersion);
                console.log(iVersion);


                var schichtColumn = (aData[schichtColumn] == "-" ? 0 : aData[schichtColumn]) * 1;
                var schicht = $(document.getElementById('schicht')).children("option:selected").val();

                if ((iMin > iVersion || iVersion > iMax) || (schicht != schichtColumn && schicht != "")) {

                    return false;
                }
                else return true;
            }
        );



        $(document).ready(function () {

            console.log(document.getElementById('min').value);
            //document.getElementById('min').value = '15-Jan-2020';


            var table = $('#myTable').DataTable(
                {
                    dom: 'Bfrtip',
                    dom: 'Bfrtip',
                    buttons: [
                        'copy', 'csv', 'excel', 'pdf', 'print'
                    ]
                });

            $('#min, #max, #schicht').change(function () {
                table.draw();
            });
        });
        function fnExcelReport() {
            var tab_text = "<table border='2px'><tr bgcolor='#87AFC6'>";
            var textRange; var j = 0;
            tab = document.getElementById('myTable'); // id of table

            for (j = 0; j < tab.rows.length; j++) {
                tab_text = tab_text + tab.rows[j].innerHTML + "</tr>";
                //tab_text=tab_text+"</tr>";
            }

            tab_text = tab_text + "</table>";
            tab_text = tab_text.replace(/<A[^>]*>|<\/A>/g, "");//remove if u want links in your table
            tab_text = tab_text.replace(/<img[^>]*>/gi, ""); // remove if u want images in your table
            tab_text = tab_text.replace(/<input[^>]*>|<\/input>/gi, ""); // removes input params

            var ua = window.navigator.userAgent;
            var msie = ua.indexOf("MSIE ");

            if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\:11\./))      // If Internet Explorer
            {
                txtArea1.document.open("txt/html", "replace");
                txtArea1.document.write(tab_text);
                txtArea1.document.close();
                txtArea1.focus();
                sa = txtArea1.document.execCommand("SaveAs", true, "TabelleExport.xls");
            }
            else                 //other browser not tested on IE 11
                sa = window.open('data:application/vnd.ms-excel,' + encodeURIComponent(tab_text));
            return (sa);
        }



    </script>


}

