@model ZeiterfassungPierburg.Models.Zugriffsrechte

@if (Convert.ToInt32(Session["AccessLayer"]) != 1)
{
    Html.RenderPartial("ErrorAccessDenied");
}
else
{

<section class="content container-fluid">
    <h3> Zugriffsrecht hinzufügen</h3>

    <div class="box box-info">
        <div class="box-body">
            <div class="form-horizontal">

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Benutzername, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Benutzername, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Benutzername, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Zugriffsebene, htmlAttributes: new { @class = "control-label col-md-2" })

                        <div class="col-md-8">
                            @Html.DropDownListFor(m => m.Zugriffsebene, Model.ZugriffsebeneList, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Zugriffsebene, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-8">
                            <input type="submit" value="Hinzufügen" class="btn btn-default" />
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
</section>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

}