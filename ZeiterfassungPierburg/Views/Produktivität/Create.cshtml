@model ZeiterfassungPierburg.Models.ViewModels.ProduktivitätViewModel


<section class="content container-fluid">
    <h3>Produktivität ausrechnen</h3>

    <div class="box box-info">
        <div class="box-body">
            <div class="form-horizontal">

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.ProduktionsanlageList, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(m => m.ProduktionsanlageID, Model.ProduktionsanlageList, null, new { @id = "panlage", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ProduktionsanlageID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FertigungteilList, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(m => m.FertigungsteilID, Model.FertigungteilList, null, new { @id = "panlage", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.FertigungsteilID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Day, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(m => m.Day, Model.DayList, null, new { @id = "panlage", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.DayList, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Art, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(m => m.Art, Model.ArtList, null, new { @id = "panlage", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ArtList, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.MitarbeiterID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(m => m.MitarbeiterID, Model.MitarbeiterList, null, new { @id = "panlage", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.MitarbeiterList, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">

                        @Html.LabelFor(model => model.Month, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(m => m.Month, Model.MonthList, null, new { @id = "panlage", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.MonthList, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">

                        @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">

                            @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">

                        <div class="col-md-8 col-xs-offset-2">
                            <label>Hinweis: Für Ausrechnung der gesamten Produktivität alle Felder unverändert lassen</label>

                        </div>
                    </div>



                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-8">
                            <input type="submit" value="Produktivität anzeigen" class="btn btn-default" />
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
</section>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
