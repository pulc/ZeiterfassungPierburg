@model ZeiterfassungPierburg.Models.MitarbeiterInSchicht

<section class="content container-fluid">
 <h3>Bemerkung des/der Mitarbeiter/in ändern</h3>
    <div class="box box-info">
        <div class="box-body">
            <div class="form-horizontal">

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                    @Html.HiddenFor(model => model.ID)
                    @Html.HiddenFor(model => model.SchichtInfoID)
                    @Html.HiddenFor(model => model.MitarbeiterID)
                    @Html.HiddenFor(model => model.ProduktionsanlageID)
                    @Html.HiddenFor(model => model.FertigungsteilID)

                    @Html.HiddenFor(model => model.Stück)
                    @Html.HiddenFor(model => model.DirStunden)
                    @Html.HiddenFor(model => model.InDirStunden)
                    @Html.HiddenFor(model => model.EingetragenVon)
                    @Html.HiddenFor(model => model.ErstelltAm)






                    <div class="form-group">
                        @Html.LabelFor(model => model.Stück, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.DisplayFor(model => model.Stück, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Stück, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DirStunden, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.DisplayFor(model => model.DirStunden, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DirStunden, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.InDirStunden, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.DisplayFor(model => model.InDirStunden, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.InDirStunden, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.EingetragenVon, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.DisplayFor(model => model.EingetragenVon, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EingetragenVon, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ErstelltAm, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.DisplayFor(model => model.ErstelltAm, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ErstelltAm, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Bemerkung, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Bemerkung, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Bemerkung, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-8">
                            <input type="submit" value="Speichern" class="btn btn-default" />
                        </div>
                    </div>
                }

                <div>
                    @Html.ActionLink("Zurück zur Übersicht", "Index")
                </div>
            </div>
        </div>
    </div>
</section>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
