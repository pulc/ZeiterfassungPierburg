@model ZeiterfassungPierburg.Models.NeueZeiterfassung.NeueZeiterfassung

<section class="content-header">
    <h2>Neue Mitarbeiter*innen hinzufügen</h2>

</section>
@using (Html.BeginForm("InsertMitarbeiter"))
{
    @Html.AntiForgeryToken()
    <!-- Main content -->
    <section class="content container-fluid">
        <div class="box box-info">
            <div class="box-header with-border">
                <div>
                    <div class="box-body">
                        <div class="table-responsive">
                            <table class="table no-margin">
                                <thead>
                                    <tr>
                                        <th>
                                            @Html.LabelFor(model => model.Produktionsanlage)
                                        </th>
                                        <th>
                                            @Html.LabelFor(model => model.Datum)
                                        </th>
                                        <th>
                                            @Html.LabelFor(model => model.Schicht)
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td>
                                            <div class="form-group">
                                                @Html.DropDownListFor(m => m.Produktionsanlage, // 1. Store selected value in Model.State;
                                                                                    // when page is rendered after postback,
                                                                                    // take selected value from Model.Produktionsanlage.

                                                                      // 2. Take list of values from Model.produktionsanlagen
                                                                      Model.ProduktionsanlageList,

                                                                      // 3. Text for the first 'default' option
                                                                      "- Wähle die Produktionsanlage -",

                                                                      //4. A class name to assign to <select> tag
                                                                      new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.Produktionsanlage, "", new { @class = "text-danger" })
                                            </div>
                                        </td>
                                        <td>
                                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                            <div class="form-group">

                                                @Html.EditorFor(model => model.Datum, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Datum, "", new { @class = "text-danger" })
                                            </div>
                                        </td>

                                        <td>
                                            <div class="form-group">
                                                @Html.DropDownListFor(m => m.Schicht, Model.SchichtList, "- Wähle die Schicht -", new { @class = "form-control" })
                                            </div>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>

                    <div class="box-body">
                        <div class="table-responsive">
                            <table class="table no-margin" id="addTable">
                                <thead>
                                    <tr>
                                        <th>
                                            @Html.LabelFor(model => model.Name)
                                        </th>
                                        <th>
                                            @Html.LabelFor(model => model.Fertigungsteil)
                                        </th>
                                        <th>
                                            @Html.LabelFor(model => model.Stückzahl)
                                        </th>
                                        <th>
                                            @Html.LabelFor(model => model.DirZeit)
                                        </th>
                                        <th>
                                            @Html.LabelFor(model => model.InDirZeit)
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td>
                                            <div class="form-group">
                                                @Html.DropDownListFor(m => m.Name, Model.NameList, "- Wähle Mitarbeiter*in -", new { @class = "form-control", @id = "name" })
                                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

                                            </div>
                                        </td>
                                        <td>
                                            <div class="form-group">
                                                @Html.DropDownListFor(m => m.Fertigungsteil, Model.FertigungteilList, "- Wähle Fertigungsteil -", new { @id = "fteil", @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.Fertigungsteil, "", new { @class = "text-danger" })

                                            </div>
                                        </td>
                                        <td>
                                            <div class="form-group">
                                                <div>
                                                    @Html.EditorFor(model => model.Stückzahl, new { htmlAttributes = new { @id = "st", @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.Stückzahl, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="form-group">
                                                <div>
                                                    @Html.EditorFor(model => model.DirZeit, new { htmlAttributes = new { @id = "dirzeit", @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.DirZeit, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="form-group">
                                                <div>
                                                    @Html.EditorFor(model => model.InDirZeit, new { htmlAttributes = new { @id = "indirzeit", @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.InDirZeit, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </td>
                                    </tr>

                                </tbody>
                            </table>
                            <button type="button" class="glyphicon glyphicon-plus" onclick="AddRow();"></button>

                        </div>
                        @Html.Label("", (string)ViewBag.Message) 

                        <div class="form-group">
                            <div>
                                <input type="submit" value="Abschicken" class="pull-right btn btn-default" />
                            </div>
                        </div>


                    </div>
                </div>
                <!-- /.box -->
            </div>
        </div>
    </section>
    <!-- /.content -->

}
    </div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script>
    // dynamic droplist https://stackoverflow.com/questions/30084568/populate-dropdownlist-using-ajax-mvc-4
    var timesClicked = 0;

    function AddRow() {
        var myTable = document.getElementById("addTable").getElementsByTagName('tbody')[0];
        timesClicked++;

        var currentIndex = myTable.rows.length;
        var currentRow = myTable.insertRow(-1);

        var name = document.getElementById('name');
        var fteil = document.getElementById('fteil');
        var st = document.getElementById('st');
        var dirzeit = document.getElementById('dirzeit');
        var indirzeit = document.getElementById('indirzeit');

       
        var nameNew = name.cloneNode(true); 
        nameNew.setAttribute("id", "name" + currentIndex);

        var fteilNew = fteil.cloneNode(true); 
        fteilNew.setAttribute("id", "fteil" + currentIndex);

        var stNew = st.cloneNode(true); 
        stNew.setAttribute("id", "st" + currentIndex);

        var dirzeitNew = dirzeit.cloneNode(true); 
        dirzeitNew.setAttribute("id", "dirzeit" + currentIndex);

        var indirzeitNew = indirzeit.cloneNode(true);
        indirzeitNew.setAttribute("id", "indirzeit" + currentIndex);

        var currentCell = currentRow.insertCell(-1);
        currentCell.appendChild(nameNew);

        currentCell = currentRow.insertCell(-1);
        currentCell.appendChild(fteilNew);

        currentCell = currentRow.insertCell(-1);
        currentCell.appendChild(stNew);

        currentCell = currentRow.insertCell(-1);
        currentCell.appendChild(dirzeitNew);

        currentCell = currentRow.insertCell(-1);
        currentCell.appendChild(indirzeitNew);

    }
</script>
}
